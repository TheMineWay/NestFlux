/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const MeProfileIndexLazyImport = createFileRoute('/me/profile/')()
const MeProfileConfig2faSetupIndexLazyImport = createFileRoute(
  '/me/profile/config/2fa/setup/',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MeProfileIndexLazyRoute = MeProfileIndexLazyImport.update({
  id: '/me/profile/',
  path: '/me/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/me/profile/index.lazy').then((d) => d.Route),
)

const MeProfileConfig2faSetupIndexLazyRoute =
  MeProfileConfig2faSetupIndexLazyImport.update({
    id: '/me/profile/config/2fa/setup/',
    path: '/me/profile/config/2fa/setup/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/me/profile/config/2fa/setup/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/me/profile/': {
      id: '/me/profile/'
      path: '/me/profile'
      fullPath: '/me/profile'
      preLoaderRoute: typeof MeProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/me/profile/config/2fa/setup/': {
      id: '/me/profile/config/2fa/setup/'
      path: '/me/profile/config/2fa/setup'
      fullPath: '/me/profile/config/2fa/setup'
      preLoaderRoute: typeof MeProfileConfig2faSetupIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/me/profile': typeof MeProfileIndexLazyRoute
  '/me/profile/config/2fa/setup': typeof MeProfileConfig2faSetupIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/me/profile': typeof MeProfileIndexLazyRoute
  '/me/profile/config/2fa/setup': typeof MeProfileConfig2faSetupIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/me/profile/': typeof MeProfileIndexLazyRoute
  '/me/profile/config/2fa/setup/': typeof MeProfileConfig2faSetupIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/me/profile' | '/me/profile/config/2fa/setup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/me/profile' | '/me/profile/config/2fa/setup'
  id: '__root__' | '/' | '/me/profile/' | '/me/profile/config/2fa/setup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  MeProfileIndexLazyRoute: typeof MeProfileIndexLazyRoute
  MeProfileConfig2faSetupIndexLazyRoute: typeof MeProfileConfig2faSetupIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  MeProfileIndexLazyRoute: MeProfileIndexLazyRoute,
  MeProfileConfig2faSetupIndexLazyRoute: MeProfileConfig2faSetupIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/me/profile/",
        "/me/profile/config/2fa/setup/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/me/profile/": {
      "filePath": "me/profile/index.lazy.tsx"
    },
    "/me/profile/config/2fa/setup/": {
      "filePath": "me/profile/config/2fa/setup/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
